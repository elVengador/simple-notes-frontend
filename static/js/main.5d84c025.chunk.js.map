{"version":3,"sources":["Components/Icon/Icon.js","Components/Header/Header.js","Components/Footer/Footer.js","Components/Modal/Modal.js","Api/lib.js","Components/Link/Link.js","Components/LinkList/LinkList.js","Components/Menu/Menu.js","Components/Message/Message.js","Pages/Home/Home.js","Components/Query/useQuery.js","Components/Title/Title.js","Components/Form/Input/Input.js","Pages/SignIn/SignIn.js","Pages/SignUp/SignUp.js","Api/fTag.js","Components/Button/Button.js","Components/TagForm/TagForm.js","Components/Button/ButtonIcon.js","Components/TagItem/TagItem.js","Pages/TagPage/TagPage.js","Api/fNote.js","Components/Form/Select/Select.js","Components/NoteForm/NoteForm.js","Components/NoteItem/NoteItem.js","Pages/NotePage/NotePage.js","Pages/NotFound/NotFound.js","App.js","useApp.js","Components/Message/useMessage.js","reportWebVitals.js","index.js"],"names":["Icon","testId","icon","light","cb","iconSvg","colorSvg","data-testid","className","onClick","Header","showMenu","faBars","Footer","Modal","children","isMenuActive","modal","useRef","useEffect","current","style","display","ref","API","getUser","localStorage","getItem","getAccessToken","getRefreshToken","getOptions","method","body","opt","mode","headers","Authorization","Refresh","includes","JSON","stringify","Link","text","LinkList","pageList","redirect","linkList","map","cur","idx","name","link","Menu","hideMenu","history","useHistory","faTimes","path","push","Message","colorMessage","isMessageVisible","message","Home","faStickyNote","ACCESS_TOKEN","sessionStorage","REFRESH_TOKEN","POST","route","a","fetch","Accept","Title","options","Input","value","setValue","type","id","placeholder","onChange","event","currentTarget","htmlFor","SignIn","showMessage","useState","email","setEmail","password","setPassword","handleSignIn","preventDefault","response","json","res","ok","auth","accessToken","refreshToken","setItem","user","SingUp","username","setUsername","confirmPassword","setConfirmPassword","handleSignUp","console","log","fTag","create","Error","findAll","find","update","remove","Button","child","TagForm","setName","queryClient","useQueryClient","mutation","useMutation","onError","onSuccess","refetchQueries","status","color","mutate","ButtonIcon","Tag","idTag","isEdit","setIsEdit","tmpName","setTmpName","mutationCreate","mutationRemove","faCheck","handelUpdate","faPen","faTrashAlt","TagList","faPlusCircle","useQuery","data","error","tagItemList","_id","fNote","Select","optionList","optionItemList","NoteForm","tagData","tag","setTag","stateButton","NoteItem","idNote","tmpTag","setTmpTag","Notes","faPlus","tagStatus","tagError","noteStatus","noteData","noteError","noteItemList","NotFound","App","setIsMenuActive","useApp","setText","setColorMessage","setIsMessageVisible","newText","setTimeout","useMessage","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.5d84c025.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Icon.css\";\n\nexport default function Icon({ testId, icon, light = false, cb }) {\n  const iconSvg = <FontAwesomeIcon icon={icon} />;\n  const colorSvg = light ? \"icon-light\" : \"icon-dark\";\n  return (\n    <div data-testid={testId} className={colorSvg} onClick={() => cb()}>\n      {iconSvg}\n    </div>\n  );\n}\n","import React, { useEffect, useContext } from 'react';\nimport Icon from '../Icon/Icon';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport './Header.css';\n\nexport default function Header({ testId, showMenu }) {\n  return (\n    <header data-testid={testId} className=\"header\">\n      <h3 className=\"header__title\">App Notes</h3>\n\n      <Icon\n        testId={'id-icon-menu'}\n        icon={faBars}\n        light={true}\n        cb={() => showMenu()}\n      />\n    </header>\n  );\n}\n","import React from \"react\";\nimport \"./Footer.css\";\n\nexport default function Footer({ testId }) {\n  return (\n    <footer data-testid={testId} className=\"footer\">\n      <h2 className=\"footer__title\">App Notes - 2020 - by elVengador</h2>\n    </footer>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport \"./Modal.css\";\n\nexport default function Modal({ children, testId, isMenuActive }) {\n  const modal = useRef(null);\n  useEffect(() => {\n    if (modal) {\n      modal.current.style.display = isMenuActive ? \"flex\" : \"none\";\n    }\n  }, [isMenuActive]);\n  return (\n    <div data-testid={testId} className=\"modal\" ref={modal}>\n      {children}\n    </div>\n  );\n}\n","const API =\n  process.env.NODE_ENV === 'production'\n    ? 'https://ev-notes.herokuapp.com/'\n    : 'http://localhost:4000/api/v1';\n\nconst getUser = () => localStorage.getItem('USER_ID') ?? '';\n\nconst getAccessToken = () =>\n  localStorage.getItem('ACCESS_TOKEN')\n    ? `Bearer ${localStorage.getItem('ACCESS_TOKEN')}`\n    : '';\n\nconst getRefreshToken = () =>\n  localStorage.getItem('REFRESH_TOKEN')\n    ? `Bearer ${localStorage.getItem('REFRESH_TOKEN')}`\n    : '';\n\nconst getOptions = (method, body = {}) => {\n  const opt = {\n    method,\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: getAccessToken(),\n      Refresh: getRefreshToken(),\n    },\n  };\n  if (['POST', 'PUT'].includes(method)) opt.body = JSON.stringify(body);\n  return opt;\n};\n\nconst isUserLogged = () => getAccessToken() && getRefreshToken() && getUser();\n\nexport { API, getUser, getOptions, isUserLogged };\n","import React from \"react\";\n\nexport default function Link({ testId, text, cb }) {\n  return (\n    <li data-testid={testId} className=\"link\" onClick={() => cb()}>\n      {text}\n    </li>\n  );\n}\n","import React from 'react';\nimport Link from '../../Components/Link/Link';\n\nexport default function LinkList({ pageList, redirect }) {\n  const linkList = pageList.map((cur, idx) => (\n    <Link key={`link-${idx}`} text={cur.name} cb={() => redirect(cur.link)} />\n  ));\n  return <ul>{linkList}</ul>;\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport './Menu.css';\n\nimport { isUserLogged } from '../../Api/lib';\nimport Icon from '../../Components/Icon/Icon';\nimport LinkList from '../../Components/LinkList/LinkList';\n\nexport default function Menu({ testId, hideMenu }) {\n  const history = useHistory();\n  const redirect = (path) => {\n    hideMenu();\n    history.push(path);\n  };\n  const pageList = isUserLogged()\n    ? [\n        { name: 'home', link: '/notes' },\n        { name: 'tags', link: '/tags' },\n        { name: 'notes', link: '/notes' },\n      ]\n    : [\n        { name: 'home', link: '/' },\n        { name: 'sign-in', link: '/sing-in' },\n        { name: 'sign-up', link: '/sing-up' },\n      ];\n\n  return (\n    <div data-testid={testId} className=\"menu\">\n      <div className=\"menu__header\">\n        <div className=\"icon\">\n          <Icon\n            testId={'id-close'}\n            icon={faTimes}\n            light={true}\n            cb={() => hideMenu()}\n          />\n        </div>\n        <h2 className=\"title\">Menu</h2>\n      </div>\n      <div className=\"menu__body\">\n        <LinkList pageList={pageList} redirect={redirect} />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport './Message.css';\n\nexport default function Message({ text, colorMessage, isMessageVisible }) {\n  const message = useRef(null);\n  useEffect(() => {\n    if (message) {\n      message.current.style.display = isMessageVisible ? 'flex' : 'none';\n    }\n  }, [isMessageVisible]);\n  return (\n    <div className={colorMessage} ref={message}>\n      {text}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { faStickyNote } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Home.css\";\nimport Icon from \"../../Components/Icon/Icon\";\n\nexport default function Home() {\n  const history = useHistory();\n  return (\n    <div className=\"home\">\n      <div className=\"home__icon\">\n        <Icon icon={faStickyNote} />\n      </div>\n      <p className=\"home__message\">\n        Write yout notes easy and read them ererywhere\n      </p>\n      <div className=\"home__options\">\n        <button\n          className=\"button-primary\"\n          onClick={() => history.push(\"/sign-in\")}\n        >\n          Sign In\n        </button>\n        <button\n          className=\"button-secondary\"\n          onClick={() => history.push(\"/sign-up\")}\n        >\n          Sign Up\n        </button>\n      </div>\n    </div>\n  );\n}\n","const ACCESS_TOKEN = sessionStorage.getItem('ACCESS_TOKEN')\n  ? `Bearer ${sessionStorage.getItem('ACCESS_TOKEN')}`\n  : '';\nconst REFRESH_TOKEN = sessionStorage.getItem('REFRESH_TOKEN')\n  ? `Bearer ${sessionStorage.getItem('REFRESH_TOKEN')}`\n  : '';\nconst API = 'http://localhost:4000/api/v1';\n\nconst GET = async (route) =>\n  await fetch(`${API}${route}`, {\n    method: 'GET',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: ACCESS_TOKEN,\n      Refresh: REFRESH_TOKEN,\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n  });\nconst POST = async (route, body = {}) =>\n  await fetch(`${API}${route}`, {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: ACCESS_TOKEN,\n      Refresh: REFRESH_TOKEN,\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: JSON.stringify(body),\n  });\n\nexport { GET, POST };\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport './Title.css';\n\nexport default function Title({ text, options = [] }) {\n  const history = useHistory();\n  const opt = options.map((cur, idx) => (\n    <div\n      key={`title-option-${idx}`}\n      className=\"button--icon\"\n      onClick={() => history.push(cur.link)}\n    >\n      {cur.icon}\n    </div>\n  ));\n  return (\n    <div className=\"title-page\">\n      <h3 className=\"title-page__text\">{text}</h3>\n      <div className=\"title-page__options\">{opt}</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Input.css\";\n\nexport default function Input({\n  testId,\n  name,\n  value,\n  setValue,\n  type = \"text\",\n}) {\n  return (\n    <div className=\"input-container\">\n      <input\n        data-testid={testId}\n        className=\"input-text\"\n        id={name}\n        name={name}\n        type={type}\n        placeholder={`Write your ${name}`}\n        value={value}\n        onChange={(event) => {\n          setValue(event.currentTarget.value);\n        }}\n      />\n      <label htmlFor={name}>{name}</label>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { POST } from '../../Components/Query/useQuery';\n\nimport Title from '../../Components/Title/Title';\nimport Input from '../../Components/Form/Input/Input';\n\nexport default function SignIn({ showMessage }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  const handleSignIn = async (event) => {\n    event.preventDefault();\n    if (email === '') return showMessage('email invalid !!', 'fail');\n    if (!password === '') return showMessage('password invalid !!', 'fail');\n    const response = await POST('/auth/sign-in', {\n      email,\n      password,\n    });\n    const res = await response.json();\n    if (response.ok && res.auth) {\n      showMessage(res.message, 'success');\n      const { accessToken, refreshToken } = res;\n      localStorage.setItem('ACCESS_TOKEN', accessToken);\n      localStorage.setItem('REFRESH_TOKEN', refreshToken);\n      localStorage.setItem('USER_ID', res.user);\n      history.push('/notes');\n    } else {\n      showMessage(res.message, 'fail');\n    }\n  };\n  return (\n    <div className=\"sign-in\">\n      <Title text={'Sign In'} />\n      <form className=\"form\">\n        <Input\n          name={'email'}\n          value={email}\n          setValue={setEmail}\n          type={'email'}\n        />\n        <Input\n          name={'password'}\n          value={password}\n          setValue={setPassword}\n          type={'password'}\n        />\n\n        <button\n          className=\"button-primary--center\"\n          onClick={(event) => handleSignIn(event)}\n        >\n          Sign In\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { POST } from '../../Components/Query/useQuery';\n\nimport Title from '../../Components/Title/Title';\nimport Input from '../../Components/Form/Input/Input';\n\nexport default function SingUp({ showMessage }) {\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const history = useHistory();\n  const handleSignUp = async (event) => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      showMessage('Confirm password is diferent', 'fail');\n    } else {\n      const response = await POST('/auth/sign-up', {\n        email,\n        username,\n        password,\n      });\n      if (response.ok) {\n        console.log(' RESPONSE:', response);\n        const res = await response.json();\n        console.log(' RES:', res);\n        showMessage('This is a message', 'success');\n        history.push('/sign-in');\n      } else {\n        const res = await response.json();\n        console.log('error');\n        showMessage(res, 'fail');\n      }\n    }\n  };\n  return (\n    <div className=\"sign-up\">\n      <Title text={'Sign Up'} />\n      <form className=\"form\">\n        <Input\n          name={'email'}\n          value={email}\n          setValue={setEmail}\n          type={'email'}\n        />\n        <Input name={'username'} value={username} setValue={setUsername} />\n        <Input\n          name={'password'}\n          value={password}\n          setValue={setPassword}\n          type={'password'}\n        />\n        <Input\n          name={'confirm-pasword'}\n          value={confirmPassword}\n          setValue={setConfirmPassword}\n          type={'password'}\n        />\n        <button\n          className=\"button-primary--center\"\n          onClick={(event) => handleSignUp(event)}\n        >\n          Sign Up\n        </button>\n      </form>\n    </div>\n  );\n}\n","import { API, getUser, getOptions } from './lib';\n\nconst fTag = {};\n\nfTag.create = async (body) => {\n  const response = await fetch(`${API}/tag`, getOptions('POST', body));\n  const res = await response.json();\n  if (response.ok) return res;\n  throw new Error(res.message);\n};\n\nfTag.findAll = async () => {\n  const response = await fetch(\n    `${API}/tag/user/${getUser()}`,\n    getOptions('GET')\n  );\n  const res = await response.json();\n  if (response.ok) return res;\n  throw new Error(res.message);\n};\n\nfTag.find = async (id) => {\n  const response = await fetch(`${API}/tag/${id}`, getOptions('GET'));\n  const res = await response.json();\n  if (response.ok) return res;\n  throw new Error(res.message);\n};\n\nfTag.update = async ({ id, body }) => {\n  const response = await fetch(`${API}/tag/${id}`, getOptions('PUT', body));\n  const res = await response.json();\n  if (response.ok) return res;\n  throw new Error(res.message);\n};\n\nfTag.remove = async (id) => {\n  const response = await fetch(`${API}/tag/${id}`, getOptions('DELETE'));\n  const res = await response.json();\n  if (response.ok) return res;\n  throw new Error(res.message);\n};\n\nexport { fTag };\n","import React from 'react';\nimport './Button.css';\n\nexport default function Button({ child, type, cb }) {\n  const className = type === 'primary' ? 'button-primary' : 'button-secondary';\n  return (\n    <button className={className} onClick={cb}>\n      {child}\n    </button>\n  );\n}\n","import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { BeatLoader } from 'react-spinners';\nimport './TagForm.css';\n\nimport { fTag } from '../../Api/fTag';\nimport Input from '../Form/Input/Input';\nimport Button from '../Button/Button';\n\nexport default function TagForm({ showMessage }) {\n  const [name, setName] = useState('');\n  const queryClient = useQueryClient();\n  const mutation = useMutation(fTag.create, {\n    onError: () => {\n      showMessage(\"can't create tag\", 'fail');\n    },\n    onSuccess: () => {\n      queryClient.refetchQueries('tags');\n      setName('');\n      showMessage('tag was created', 'success');\n    },\n  });\n\n  const handleCreateTag = (event) => {\n    event.preventDefault();\n    if (!name) {\n      showMessage('invalid name !!', 'fail');\n    } else {\n      mutation.mutate({ name, user: localStorage.getItem('USER_ID') });\n    }\n  };\n\n  return (\n    <form className=\"tag-form\">\n      <Input name={'name'} value={name} setValue={setName} />\n      <Button\n        child={\n          mutation.status === 'loading' ? (\n            <BeatLoader color={'#fff'} />\n          ) : (\n            'Create'\n          )\n        }\n        type={'primary'}\n        cb={handleCreateTag}\n      />\n    </form>\n  );\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function ButtonIcon({ icon, type, cb }) {\n  const iconSvg = <FontAwesomeIcon icon={icon} />;\n  const colorSvg =\n    type === 'light'\n      ? 'button--icon-light'\n      : type === 'dark'\n      ? 'button--icon-dark'\n      : 'button--icon';\n  return (\n    <div className={colorSvg} onClick={() => cb()}>\n      {iconSvg}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport {\n  faPen,\n  faTrashAlt,\n  faTimes,\n  faCheck,\n} from '@fortawesome/free-solid-svg-icons';\nimport './TagItem.css';\n\nimport { fTag } from '../../Api/fTag';\nimport Input from '../Form/Input/Input';\nimport ButtonIcon from '../Button/ButtonIcon';\n\nexport default function Tag({ showMessage, idTag, name }) {\n  const [isEdit, setIsEdit] = useState(false);\n  const [tmpName, setTmpName] = useState(name);\n  const queryClient = useQueryClient();\n\n  const mutationCreate = useMutation(fTag.update, {\n    onError: () => {\n      showMessage(\"can't update tag\", 'fail');\n    },\n    onSuccess: () => {\n      queryClient.refetchQueries('tags');\n      setIsEdit(false);\n      showMessage('tag was updated', 'success');\n    },\n  });\n  const mutationRemove = useMutation(fTag.remove, {\n    onError: () => showMessage(\"can't remove tag\", 'fail'),\n    onSuccess: () => {\n      queryClient.refetchQueries('tags');\n      showMessage('tag was removed', 'success');\n    },\n  });\n  const handleCancel = () => {\n    setIsEdit(false);\n    setTmpName(name);\n  };\n  const handelUpdate = () => {\n    if (!tmpName) {\n      showMessage('invalid name !!', 'fail');\n    } else {\n      const user = localStorage.getItem('USER_ID');\n      const body = { name: tmpName, user };\n      mutationCreate.mutate({ id: idTag, body });\n    }\n  };\n  const handleRemove = () => mutationRemove.mutate(idTag);\n\n  if (isEdit)\n    return (\n      <div className=\"tag-item-form\">\n        <ButtonIcon icon={faTimes} type={'light'} cb={() => handleCancel()} />\n        <Input name={'tag'} value={tmpName} setValue={setTmpName} />\n        <ButtonIcon icon={faCheck} type={'light'} cb={() => handelUpdate()} />\n      </div>\n    );\n  return (\n    <div className=\"tag-item\">\n      <p className=\"tag-item__name\">{name}</p>\n      <div className=\"tag-item__controls\">\n        <ButtonIcon icon={faPen} cb={() => setIsEdit(true)} />\n        <ButtonIcon icon={faTrashAlt} cb={() => handleRemove()} />\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useQueryClient } from 'react-query';\nimport { useQuery } from 'react-query';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport { fTag } from '../../Api/fTag';\nimport Title from '../../Components/Title/Title';\nimport TagForm from '../../Components/TagForm/TagForm';\nimport TagItem from '../../Components/TagItem/TagItem';\n\nexport default function TagList({ showMessage }) {\n  const iconCreate = <FontAwesomeIcon className=\"icon\" icon={faPlusCircle} />;\n  const history = useHistory();\n  const queryClient = useQueryClient();\n\n  useEffect(() => {\n    if (\n      !localStorage.getItem('USER_ID') ||\n      !localStorage.getItem('ACCESS_TOKEN') ||\n      !localStorage.getItem('REFRESH_TOKEN')\n    ) {\n      history.push('/sign-in');\n    }\n  }, []);\n\n  const { status, data, error } = useQuery('tags', fTag.findAll);\n\n  if (status === 'error') return <p>{error.message}</p>;\n  if (status === 'loading') return <p> Is Loading !!</p>;\n  const tagItemList = data.map((cur, idx) => (\n    <TagItem\n      key={`tag-${idx}`}\n      idTag={cur._id}\n      name={cur.name}\n      showMessage={showMessage}\n    />\n  ));\n\n  return (\n    <div className=\"tag-page\">\n      <Title text={'Tags'} />\n      <TagForm showMessage={showMessage} />\n      {tagItemList}\n    </div>\n  );\n}\n","import { API, getUser, getOptions } from './lib';\n\nconst fNote = {};\n\nfNote.create = async (body) => {\n  const response = await fetch(`${API}/note`, getOptions('POST', body));\n  const res = await response.json();\n  if (response.ok) return res;\n  throw new Error(res.message);\n};\n\nfNote.findAll = async () => {\n  const response = await fetch(\n    `${API}/note/user/${getUser()}`,\n    getOptions('GET')\n  );\n  const res = await response.json();\n  if (response.ok) return res;\n  throw new Error(res.message);\n};\n\nfNote.find = async (id) => {\n  const response = await fetch(`${API}/note/${id}`, getOptions('GET'));\n  const res = await response.json();\n  if (response.ok) return res;\n  throw new Error(res.message);\n};\n\nfNote.update = async ({ id, body }) => {\n  const response = await fetch(`${API}/note/${id}`, getOptions('PUT', body));\n  const res = await response.json();\n  if (response.ok) return res;\n  throw new Error(res.message);\n};\n\nfNote.remove = async (id) => {\n  const response = await fetch(`${API}/note/${id}`, getOptions('DELETE'));\n  const res = await response.json();\n  if (response.ok) return res;\n  throw new Error(res.message);\n};\n\nexport { fNote };\n","import React, { useEffect, useRef } from 'react';\nimport './Select.css';\n\nexport default function Select({ testId, name, optionList, value, setValue }) {\n  const optionItemList = optionList.map((cur, idx) => (\n    <option key={`option-${idx}`} value={cur._id}>\n      {cur.name}\n    </option>\n  ));\n  return (\n    <div className=\"input-container\">\n      <select\n        data-testid={testId}\n        className=\"input-select\"\n        id={name}\n        name={name}\n        placeholder={`Write your ${name}`}\n        value={value}\n        onChange={(event) => {\n          setValue(event.currentTarget.value);\n        }}\n      >\n        {optionItemList}\n      </select>\n      <label htmlFor={name}>{name}</label>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { BeatLoader } from 'react-spinners';\nimport './NoteForm.css';\n\nimport { fNote } from '../../Api/fNote';\nimport Input from '../Form/Input/Input';\nimport Select from '../Form/Select/Select';\nimport Button from '../Button/Button';\n\nexport default function NoteForm({ showMessage, tagData }) {\n  const [name, setName] = useState('');\n  const [tag, setTag] = useState(tagData[0] ? tagData[0]._id : '');\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation(fNote.create, {\n    onError: () => {\n      showMessage(\"can't create Note\", 'fail');\n    },\n    onSuccess: () => {\n      queryClient.refetchQueries('notes');\n      setName('');\n      showMessage('note was created', 'success');\n    },\n  });\n\n  const handleCreateNote = (event) => {\n    event.preventDefault();\n    if (!name) {\n      showMessage('invalid name !!', 'fail');\n    } else if (!tag) {\n      showMessage('invalid tag !!', 'fail');\n    } else {\n      mutation.mutate({ name, tag, user: localStorage.getItem('USER_ID') });\n    }\n  };\n  const stateButton =\n    mutation.status === 'loading' ? <BeatLoader color={'#fff'} /> : 'Create';\n\n  return (\n    <form className=\"note-form\">\n      <Input name={'name'} value={name} setValue={setName} />\n      <Select name={'tag'} optionList={tagData} value={tag} setValue={setTag} />\n      <Button child={stateButton} type={'primary'} cb={handleCreateNote} />\n    </form>\n  );\n}\n","import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport {\n  faPen,\n  faTrashAlt,\n  faTimes,\n  faCheck,\n} from '@fortawesome/free-solid-svg-icons';\nimport './NoteItem.css';\n\nimport { fNote } from '../../Api/fNote';\nimport Input from '../Form/Input/Input';\nimport Select from '../Form/Select/Select';\nimport ButtonIcon from '../Button/ButtonIcon';\n\nexport default function NoteItem({ showMessage, idNote, name, tag, tagData }) {\n  const [isEdit, setIsEdit] = useState(false);\n  const [tmpName, setTmpName] = useState(name);\n  const [tmpTag, setTmpTag] = useState(tag);\n  const queryClient = useQueryClient();\n\n  const mutationCreate = useMutation(fNote.update, {\n    onError: () => {\n      showMessage(\"can't update note\", 'fail');\n    },\n    onSuccess: () => {\n      queryClient.refetchQueries('notes');\n      setIsEdit(false);\n      showMessage('note was updated', 'success');\n    },\n  });\n  const mutationRemove = useMutation(fNote.remove, {\n    onError: () => showMessage(\"can't remove note\", 'fail'),\n    onSuccess: () => {\n      queryClient.refetchQueries('notes');\n      showMessage('note was removed', 'success');\n    },\n  });\n  const handleCancel = () => {\n    setIsEdit(false);\n    setTmpName(name);\n  };\n  const handelUpdate = () => {\n    if (!tmpName) {\n      showMessage('invalid name !!', 'fail');\n    } else if (!tmpTag) {\n      showMessage('invalid tag !!', 'fail');\n    } else {\n      const user = localStorage.getItem('USER_ID');\n      const body = { name: tmpName, tag: tmpTag, user };\n      mutationCreate.mutate({ id: idNote, body });\n    }\n  };\n  const handleRemove = () => mutationRemove.mutate(idNote);\n\n  if (isEdit)\n    return (\n      <div className=\"note-item-form\">\n        <ButtonIcon icon={faTimes} type={'light'} cb={() => handleCancel()} />\n        <Input name={'tag'} value={tmpName} setValue={setTmpName} />\n        <Select\n          name={'tag'}\n          optionList={tagData}\n          value={tmpTag}\n          setValue={setTmpTag}\n        />\n        <ButtonIcon icon={faCheck} type={'light'} cb={() => handelUpdate()} />\n      </div>\n    );\n  return (\n    <div className=\"note-item\">\n      <p className=\"note-item__name\">{name}</p>\n      <div className=\"note-item__controls\">\n        <ButtonIcon icon={faPen} cb={() => setIsEdit(true)} />\n        <ButtonIcon icon={faTrashAlt} cb={() => handleRemove()} />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport './NotePage.css';\n\nimport { fTag } from '../../Api/fTag';\nimport { fNote } from '../../Api/fNote';\n\nimport Title from '../../Components/Title/Title';\nimport NoteForm from '../../Components/NoteForm/NoteForm';\nimport NoteItem from '../../Components/NoteItem/NoteItem';\n\nexport default function Notes({ showMessage }) {\n  const history = useHistory();\n  const iconCreate = <FontAwesomeIcon className=\"icon\" icon={faPlus} />;\n\n  useEffect(() => {\n    if (\n      !localStorage.getItem('USER_ID') ||\n      !localStorage.getItem('ACCESS_TOKEN') ||\n      !localStorage.getItem('REFRESH_TOKEN')\n    ) {\n      history.push('/sign-in');\n    }\n  }, []);\n\n  // fetcher tag data\n  const { status: tagStatus, data: tagData, error: tagError } = useQuery(\n    'tags',\n    fTag.findAll\n  );\n  const { status: noteStatus, data: noteData, error: noteError } = useQuery(\n    'notes',\n    fNote.findAll\n  );\n\n  if (tagStatus === 'error') return <p>{tagError.message}</p>;\n  if (tagStatus === 'loading') return <p> Is Loading !!</p>;\n  if (noteStatus === 'error') return <p>{noteError.message}</p>;\n  if (noteStatus === 'loading') return <p> Is Loading !!</p>;\n\n  const noteItemList = noteData.map((cur, idx) => (\n    <NoteItem\n      key={`note-item-${idx}`}\n      showMessage={showMessage}\n      idNote={cur._id}\n      name={cur.name}\n      tag={cur.tag}\n      tagData={tagData}\n    />\n  ));\n  return (\n    <div className=\"note-page\">\n      <Title text={'Notes'} />\n      <NoteForm showMessage={showMessage} tagData={tagData} />\n      {noteItemList}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function NotFound() {\n  return <div>Page not found!!</div>;\n}\n","import React, { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\n//    custom hooks\nimport useApp from './useApp';\nimport useMessage from './Components/Message/useMessage';\n//    components\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/Footer';\nimport Modal from './Components/Modal/Modal';\nimport Menu from './Components/Menu/Menu';\nimport Message from './Components/Message/Message';\n//    pages\nimport Home from './Pages/Home/Home';\nimport SignIn from './Pages/SignIn/SignIn';\nimport SignUp from './Pages/SignUp/SignUp';\nimport TagPage from './Pages/TagPage/TagPage';\nimport NotePage from './Pages/NotePage/NotePage';\nimport NotFound from './Pages/NotFound/NotFound';\n\n//    test\nimport NoteItem from './Components/NoteItem/NoteItem';\n\nexport default function App() {\n  const { isMenuActive, showMenu, hideMenu } = useApp();\n  const { text, colorMessage, isMessageVisible, showMessage } = useMessage();\n\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <Header showMenu={showMenu} />\n        <div className=\"wrapper\">\n          <Message\n            text={text}\n            colorMessage={colorMessage}\n            isMessageVisible={isMessageVisible}\n          />\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/sign-in\">\n              <SignIn showMessage={showMessage} />\n            </Route>\n            <Route path=\"/sign-up\">\n              <SignUp showMessage={showMessage} />\n            </Route>\n            <Route path=\"/tags\" exact>\n              <TagPage showMessage={showMessage} />\n            </Route>\n            <Route path=\"/notes\">\n              <NotePage showMessage={showMessage} />\n            </Route>\n            <Route path=\"/test\"></Route>\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </div>\n        <Footer />\n        <Modal isMenuActive={isMenuActive}>\n          <Menu hideMenu={hideMenu} />\n        </Modal>\n      </BrowserRouter>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\n\nexport default function useApp() {\n  const [isMenuActive, setIsMenuActive] = useState(false);\n\n  const showMenu = () => setIsMenuActive(true);\n  const hideMenu = () => setIsMenuActive(false);\n\n  return {\n    isMenuActive,\n    showMenu,\n    hideMenu,\n  };\n}\n","import React, { useState } from 'react';\n\nexport default function useMessage() {\n  const [text, setText] = useState('');\n  const [colorMessage, setColorMessage] = useState('');\n  const [isMessageVisible, setIsMessageVisible] = useState(false);\n\n  /**\n   * @param {String} newText\n   * @param {String} type\n   */\n  const showMessage = (newText, type) => {\n    setText(newText);\n    setColorMessage(type === 'success' ? 'message--success' : 'message--error');\n    setIsMessageVisible(true);\n\n    setTimeout(() => {\n      setIsMessageVisible(false);\n    }, 5000);\n  };\n\n  return { text, colorMessage, isMessageVisible, showMessage };\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { QueryClientProvider, QueryClient } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}